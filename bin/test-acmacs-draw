#! /usr/bin/env python3
# -*- Python -*-

"""
"""

import sys, os, datetime, traceback, pprint
if sys.version_info.major != 3: raise RuntimeError("Run script with python3")
from pathlib import Path
sys.path[:0] = [str(Path(os.environ["ACMACSD_ROOT"]).resolve().joinpath("py"))]
import logging; module_logger = logging.getLogger(__name__)

import acmacs_draw_backend as draw_m

# ----------------------------------------------------------------------

def main(args):
    # test_time_series()
    output_dir = Path("/tmp/test-acmacs-draw")
    output_dir.mkdir(exist_ok=True)
    print(str(output_dir.joinpath("test.pdf")))
    surface = draw_m.PdfCairo(str(output_dir.joinpath("test.pdf")), 800, 600, 5000)
    surface.line_p(50, 50, 300, 300, "blue", 5)
    surface.line_s(50, 100, 300, 400, "red", 5)
    surface.rectangle(1250, 50, 300, 320, "orange", 5)
    surface.rectangle_filled(1050, 50, 300, 320, "black", 1, "yellow")
    surface.circle_p(500, 800, 100, "blue3", 5, 1, 0)
    surface.circle_s(500, 1300, 100, "blue3", 5, 0.5, 0.5)
    surface.circle_filled_p(1000, 800, 100, "cyan2", 2, "cyan", 1, 0)
    surface.circle_filled_s(1000, 1300, 100, "cyan2", 2, "cyan", 0.5, 0.5)

# ----------------------------------------------------------------------

try:
    import argparse
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('-d', '--debug', action='store_const', dest='loglevel', const=logging.DEBUG, default=logging.INFO, help='Enable debugging output.')

    args = parser.parse_args()
    logging.basicConfig(level=args.loglevel, format="%(levelname)s %(asctime)s: %(message)s")
    exit_code = main(args)
except Exception as err:
    logging.error('{}\n{}'.format(err, traceback.format_exc()))
    exit_code = 1
exit(exit_code)

# ======================================================================
### Local Variables:
### eval: (if (fboundp 'eu-rename-buffer) (eu-rename-buffer))
### End:
